name: CI

on:
  push:
    # Avoid duplicate builds on PRs.
    branches:
      - main
  pull_request:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.7
      - name: Clippy
        run: cargo clippy --all-targets --locked -- --deny warnings
      - name: rustfmt
        run: cargo fmt -- --check

  unit-test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.7
      - name: Run unit tests
        run: cargo test --locked

  unit-test-coverage:
    name: Generate test coverage report
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly Rust toolchain
        run: rustup install nightly
      - name: Rust Cache
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run unit tests and generate coverage report
        run: cargo +nightly llvm-cov --locked --html
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: "llvm-cov-html-${{github.event.repository.name}}-${{github.sha}}"
          path: "target/llvm-cov/html"
          if-no-files-found: "error"

  integration-test:
    name: integration-tests ${{ matrix.builder }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.arch == 'arm64' && 'pub-hk-ubuntu-24.04-arm-medium' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        arch: ["amd64"]
        builder: ["heroku/builder:20", "heroku/builder:22", "heroku/builder:24"]
        include:
          - arch: "arm64"
            builder: "heroku/builder:24"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install musl-tools
        run: sudo apt-get install musl-tools -y --no-install-recommends
      - name: Update Rust toolchain
        run: rustup update
      - name: Install Rust linux-musl target
        run: rustup target add ${{ matrix.arch == 'arm64' && 'aarch64-unknown-linux-musl' || 'x86_64-unknown-linux-musl' }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.7
      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.8.8
      # The images are pulled up front to prevent duplicate pulls due to the tests being run concurrently.
      - name: Pull builder image
        run: docker pull ${{ matrix.builder }}
      - name: Pull run image
        # Using `docker inspect` rather than `pack builder inspect` since the latter makes
        # additional requests to Docker Hub even when the image is available locally.
        run: |
          RUN_IMAGE=$(
            docker inspect --format='{{index .Config.Labels "io.buildpacks.builder.metadata"}}' '${{ matrix.builder }}' \
              | jq --exit-status --raw-output '.stack.runImage.image'
          )
          docker pull "${RUN_IMAGE}"
      - name: Run integration tests
        env:
          INTEGRATION_TEST_BUILDER: ${{ matrix.builder }}
        # Runs only tests annotated with the `ignore` attribute (which in this repo, are the integration tests).
        run: cargo test --locked -- --ignored --test-threads 16
